import numpy as np

def bisection_method(f, a, b, tol=1e-6, max_iter=100):
    if f(a) * f(b) >= 0:
        raise ValueError("Function has the same signs at the endpoints.")

    for _ in range(max_iter):
        c = (a + b) / 2
        if abs(f(c)) < tol:
            return c
        elif f(a) * f(c) < 0:
            b = c
        else:
            a = c
    raise ValueError("Maximum iterations exceeded.")

# Example Usage:
f = lambda x: x**3 - x - 2
root = bisection_method(f, 1, 2)
print(f"Root found using Bisection Method: {root}")
